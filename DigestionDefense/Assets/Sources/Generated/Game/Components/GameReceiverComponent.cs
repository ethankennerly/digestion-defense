//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ReceiverComponent receiver { get { return (ReceiverComponent)GetComponent(GameComponentsLookup.Receiver); } }
    public bool hasReceiver { get { return HasComponent(GameComponentsLookup.Receiver); } }

    public void AddReceiver(System.Collections.Generic.HashSet<int> newFilterComponentIndexes, int newOccupantId) {
        var index = GameComponentsLookup.Receiver;
        var component = CreateComponent<ReceiverComponent>(index);
        component.filterComponentIndexes = newFilterComponentIndexes;
        component.occupantId = newOccupantId;
        AddComponent(index, component);
    }

    public void ReplaceReceiver(System.Collections.Generic.HashSet<int> newFilterComponentIndexes, int newOccupantId) {
        var index = GameComponentsLookup.Receiver;
        var component = CreateComponent<ReceiverComponent>(index);
        component.filterComponentIndexes = newFilterComponentIndexes;
        component.occupantId = newOccupantId;
        ReplaceComponent(index, component);
    }

    public void RemoveReceiver() {
        RemoveComponent(GameComponentsLookup.Receiver);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherReceiver;

    public static Entitas.IMatcher<GameEntity> Receiver {
        get {
            if (_matcherReceiver == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Receiver);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherReceiver = matcher;
            }

            return _matcherReceiver;
        }
    }
}
