//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HealthChangerComponent healthChanger { get { return (HealthChangerComponent)GetComponent(GameComponentsLookup.HealthChanger); } }
    public bool hasHealthChanger { get { return HasComponent(GameComponentsLookup.HealthChanger); } }

    public void AddHealthChanger(int newValue) {
        var index = GameComponentsLookup.HealthChanger;
        var component = CreateComponent<HealthChangerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHealthChanger(int newValue) {
        var index = GameComponentsLookup.HealthChanger;
        var component = CreateComponent<HealthChangerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHealthChanger() {
        RemoveComponent(GameComponentsLookup.HealthChanger);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHealthChanger;

    public static Entitas.IMatcher<GameEntity> HealthChanger {
        get {
            if (_matcherHealthChanger == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HealthChanger);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHealthChanger = matcher;
            }

            return _matcherHealthChanger;
        }
    }
}
